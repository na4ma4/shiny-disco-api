// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: github.com/na4ma4/shiny-disco-api/discovery.proto

package shiny_disco_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is a universally unique client identifier.
	//
	// ID MUST be as unique as possible but also supplied by the client.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Token is the authentication for an identifier.
	//
	// Token is accepted on first request by a new ID and used as verification on all
	// subsequent connections.
	Token    string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConnectRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type DiscoverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DiscoverRequest) Reset() {
	*x = DiscoverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverRequest) ProtoMessage() {}

func (x *DiscoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverRequest.ProtoReflect.Descriptor instead.
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

var File_github_com_na4ma4_shiny_disco_api_discovery_proto protoreflect.FileDescriptor

var file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDesc = []byte{
	0x0a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x34,
	0x6d, 0x61, 0x34, 0x2f, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x34, 0x6d, 0x61, 0x34, 0x2f, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x2d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x32,
	0x52, 0x0a, 0x04, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x30, 0x01, 0x32, 0x56, 0x0a, 0x06, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4c, 0x0a,
	0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x68, 0x69, 0x6e,
	0x79, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x68, 0x69, 0x6e, 0x79, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x30, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x34, 0x6d, 0x61, 0x34,
	0x2f, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x2d, 0x61, 0x70, 0x69,
	0x3b, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x5f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescOnce sync.Once
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescData = file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDesc
)

func file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescGZIP() []byte {
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescOnce.Do(func() {
		file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescData)
	})
	return file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDescData
}

var file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_github_com_na4ma4_shiny_disco_api_discovery_proto_goTypes = []interface{}{
	(*ConnectRequest)(nil),  // 0: shinydisco.api.v1.ConnectRequest
	(*DiscoverRequest)(nil), // 1: shinydisco.api.v1.DiscoverRequest
	(*Message)(nil),         // 2: shinydisco.api.v1.Message
	(*Service)(nil),         // 3: shinydisco.api.v1.Service
}
var file_github_com_na4ma4_shiny_disco_api_discovery_proto_depIdxs = []int32{
	0, // 0: shinydisco.api.v1.Core.Connect:input_type -> shinydisco.api.v1.ConnectRequest
	1, // 1: shinydisco.api.v1.Server.Discover:input_type -> shinydisco.api.v1.DiscoverRequest
	2, // 2: shinydisco.api.v1.Core.Connect:output_type -> shinydisco.api.v1.Message
	3, // 3: shinydisco.api.v1.Server.Discover:output_type -> shinydisco.api.v1.Service
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_github_com_na4ma4_shiny_disco_api_discovery_proto_init() }
func file_github_com_na4ma4_shiny_disco_api_discovery_proto_init() {
	if File_github_com_na4ma4_shiny_disco_api_discovery_proto != nil {
		return
	}
	file_github_com_na4ma4_shiny_disco_api_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_github_com_na4ma4_shiny_disco_api_discovery_proto_goTypes,
		DependencyIndexes: file_github_com_na4ma4_shiny_disco_api_discovery_proto_depIdxs,
		MessageInfos:      file_github_com_na4ma4_shiny_disco_api_discovery_proto_msgTypes,
	}.Build()
	File_github_com_na4ma4_shiny_disco_api_discovery_proto = out.File
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_rawDesc = nil
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_goTypes = nil
	file_github_com_na4ma4_shiny_disco_api_discovery_proto_depIdxs = nil
}
